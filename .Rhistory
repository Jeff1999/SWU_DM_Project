print(diff_17)
print(diff_18)
diff_16 <- colnames(cycling_16)[!(colnames(cycling_16) %in% interset_16_17_18)]
diff_17 <- colnames(cycling_17)[!(colnames(cycling_17) %in% interset_16_17_18)]
diff_18 <- colnames(cycling_18)[!(colnames(cycling_18) %in% interset_16_17_18)]
diff_16
diff_17
diff_18
cycling <- bind_rows(cycling_16, cycling_17, cycling_18)
cycling <- cycling[,order(colnames(cycling))]
dim(cycling)
cycling <- bind_rows(cycling_16, cycling_17, cycling_18)
cycling <- cycling[,order(colnames(cycling))]  # reorder columns alphabetically to examine similar columns
dim(cycling)
View(cycling_17)
View(cycling_17)
View(cycling_18)
View(cycling_18)
cycling <- bind_rows(cycling_16, cycling_17, cycling_18)
#cycling <- cycling[,order(colnames(cycling))]  # reorder columns alphabetically to examine similar columns
dim(cycling)
colnames(cycling)
cycling_new <- mutate(cycling, x = paste(Curran.St.total, Curran.Street.Total))
View(cycling_new)
View(cycling_new)
cycling_new <- cycling %>%
unite(x, c(Curran.St.total, Curran.Street.Total, Curran.Street.Total.Cyclists), sep = " ", remove = TRUE, na.rm=TRUE)
x
cycling_new$x
cycling[is.na(cycling)] <- 0
cycling_new <- cycling %>%
unite(x, c(Curran.St.total, Curran.Street.Total, Curran.Street.Total.Cyclists), sep = " ", remove = TRUE, na.rm=TRUE)
cycling[is.na(cycling)] <- ""
cycling_new <- cycling %>%
unite(x, c(Curran.St.total, Curran.Street.Total, Curran.Street.Total.Cyclists), sep = " ", remove = TRUE, na.rm=TRUE)
cycling <- bind_rows(cycling_16, cycling_17, cycling_18)
# You can reorder columns alphabetically to examine similar columns
# cycling <- cycling[,order(colnames(cycling))]
dim(cycling)
cycling[is.na(cycling)] <- ""
cycling_new <- cycling %>%
unite(x, c(Curran.St.total, Curran.Street.Total, Curran.Street.Total.Cyclists), sep = " ", remove = TRUE, na.rm=TRUE)
cycling <- bind_rows(cycling_16, cycling_17, cycling_18)
dim(cycling)
cycling[is.na(cycling)] <- ""  # replace "NA" with ""
cycling_new <- cycling %>%
unite(Curran.Street.Total, c(Curran.St.total, Curran.Street.Total, Curran.Street.Total.Cyclists), sep = "", remove = TRUE, na.rm=TRUE)
cycling[is.na(cycling)] <- ""  # replace "NA" with ""
cycling_new <- cycling %>%
unite(Curran.Street.Total, c(Curran.St.total, Curran.Street.Total, Curran.Street.Total.Cyclists), sep = "", remove = TRUE, na.rm=TRUE)
cycling <- bind_rows(cycling_16, cycling_17, cycling_18)
cycling[is.na(cycling)] <- ""  # replace "NA" with ""
dim(cycling)
cycling_tmp <- bind_rows(cycling_16, cycling_17, cycling_18)
cycling_tmp[is.na(cycling_tmp)] <- ""  # replace "NA" with ""
dim(cycling_tmp)
cycling_tmp <- bind_rows(cycling_16, cycling_17, cycling_18)
cycling_tmp[is.na(cycling_tmp)] <- ""  # replace "NA" with ""
dim(cycling_tmp)
cycling <- cycling_tmp %>%
unite(Curran.Street.Cyclists, c(Curran.St.total, Curran.Street.Total, Curran.Street.Total.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Domain.Road.Cyclists, c(Dominion.Road..near.View.Rd..Total.Cyclists, Dominion.Road.Total.Cyclists), sep = "", remove = TRUE, na.rm=TRUE)
cycling <- cycling_tmp %>%
unite(Curran.Street.Cyclists, c(Curran.St.total, Curran.Street.Total, Curran.Street.Total.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Domain.Road.Cyclists, c(Dominion.Road..near.View.Rd..Total.Cyclists, Dominion.Road.Total.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(East.Coast.Road.Cyclists, c(East_Coast_Road.Cyclists, East.Coast.Road.Cyclists), sep = "", remove = TRUE, na.rm=TRUE)
cycling <- cycling_tmp %>%
unite(Curran.Street.Cyclists, c(Curran.St.total, Curran.Street.Total, Curran.Street.Total.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Domain.Road.Cyclists, c(Dominion.Road..near.View.Rd..Total.Cyclists, Dominion.Road.Total.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(East.Coast.Road.Cyclists, c(East_Coast_Road.Cyclists, East.Coast.Road.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Great.North.Road.Cyclists, c(Great.North.Rd, Great.North.Road.Cyclists, Great.North.Rd.Total), sep = "", remove = TRUE, na.rm=TRUE)
View(cycling_16)
View(cycling_16)
cycling <- cycling_tmp %>%
unite(Curran.Street.Cyclists, c(Curran.St.total, Curran.Street.Total, Curran.Street.Total.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Domain.Road.Cyclists, c(Dominion.Road..near.View.Rd..Total.Cyclists, Dominion.Road.Total.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(East.Coast.Road.Cyclists, c(East_Coast_Road.Cyclists, East.Coast.Road.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Great.North.Road.Cyclists, c(Great.North.Rd, Great.North.Road.Cyclists, Great.North.Rd.Total), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Great.South.Road.Cyclists, c(Great.South.Road.Total, Great.South.Road.Total.Cyclists), sep = "", remove = TRUE, na.rm=TRUE)
cycling <- cycling_tmp %>%
unite(Curran.Street.Cyclists, c(Curran.St.total, Curran.Street.Total, Curran.Street.Total.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Domain.Road.Cyclists, c(Dominion.Road..near.View.Rd..Total.Cyclists, Dominion.Road.Total.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(East.Coast.Road.Cyclists, c(East_Coast_Road.Cyclists, East.Coast.Road.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Great.North.Road.Cyclists, c(Great.North.Rd, Great.North.Road.Cyclists, Great.North.Rd.Total), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Great.South.Road.Cyclists, c(Great.South.Road.Total, Great.South.Road.Total.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Lagoon.Drive.Cyclists, c(Lagoon_Drive.Cyclists, Lagoon.Drive.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Lake.Road.Cyclists, c(Lake.Road.Total, Lake.Road.Total.Cyclists, sep = "", remove = TRUE, na.rm=TRUE))
cycling_tmp <- bind_rows(cycling_16, cycling_17, cycling_18)
cycling_tmp[is.na(cycling_tmp)] <- ""  # replace "NA" with ""
dim(cycling_tmp)
cycling <- cycling_tmp %>%
unite(Curran.Street.Cyclists, c(Curran.St.total, Curran.Street.Total, Curran.Street.Total.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Domain.Road.Cyclists, c(Dominion.Road..near.View.Rd..Total.Cyclists, Dominion.Road.Total.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(East.Coast.Road.Cyclists, c(East_Coast_Road.Cyclists, East.Coast.Road.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Great.North.Road.Cyclists, c(Great.North.Rd, Great.North.Road.Cyclists, Great.North.Rd.Total), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Great.South.Road.Cyclists, c(Great.South.Road.Total, Great.South.Road.Total.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Lagoon.Drive.Cyclists, c(Lagoon_Drive.Cyclists, Lagoon.Drive.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Lake.Road.Cyclists, c(Lake.Road.Total, Lake.Road.Total.Cyclists, sep = "", remove = TRUE, na.rm=TRUE))
cycling <- cycling_tmp %>%
unite(Curran.Street.Cyclists, c(Curran.St.total, Curran.Street.Total, Curran.Street.Total.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Domain.Road.Cyclists, c(Dominion.Road..near.View.Rd..Total.Cyclists, Dominion.Road.Total.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(East.Coast.Road.Cyclists, c(East_Coast_Road.Cyclists, East.Coast.Road.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Great.North.Road.Cyclists, c(Great.North.Rd, Great.North.Road.Cyclists, Great.North.Rd.Total), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Great.South.Road.Cyclists, c(Great.South.Road.Total, Great.South.Road.Total.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Lagoon.Drive.Cyclists, c(Lagoon_Drive.Cyclists, Lagoon.Drive.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Lake.Road.Cyclists, c(Lake.Road.Total, Lake.Road.Total.Cyclists), sep = "", remove = TRUE, na.rm=TRUE))
cycling <- cycling_tmp %>%
unite(Curran.Street.Cyclists, c(Curran.St.total, Curran.Street.Total, Curran.Street.Total.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Domain.Road.Cyclists, c(Dominion.Road..near.View.Rd..Total.Cyclists, Dominion.Road.Total.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(East.Coast.Road.Cyclists, c(East_Coast_Road.Cyclists, East.Coast.Road.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Great.North.Road.Cyclists, c(Great.North.Rd, Great.North.Road.Cyclists, Great.North.Rd.Total), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Great.South.Road.Cyclists, c(Great.South.Road.Total, Great.South.Road.Total.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Lagoon.Drive.Cyclists, c(Lagoon_Drive.Cyclists, Lagoon.Drive.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Lake.Road.Cyclists, c(Lake.Road.Total, Lake.Road.Total.Cyclists), sep = "", remove = TRUE, na.rm=TRUE)
cycling <- cycling_tmp %>%
unite(Curran.Street.Cyclists, c(Curran.St.total, Curran.Street.Total, Curran.Street.Total.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Domain.Road.Cyclists, c(Dominion.Road..near.View.Rd..Total.Cyclists, Dominion.Road.Total.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(East.Coast.Road.Cyclists, c(East_Coast_Road.Cyclists, East.Coast.Road.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Great.North.Road.Cyclists, c(Great.North.Rd, Great.North.Road.Cyclists, Great.North.Rd.Total), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Great.South.Road.Cyclists, c(Great.South.Road.Total, Great.South.Road.Total.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Lagoon.Drive.Cyclists, c(Lagoon_Drive.Cyclists, Lagoon.Drive.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Lake.Road.Cyclists, c(Lake.Road.Total, Lake.Road.Total.Cyclists), sep = "", remove = TRUE, na.rm=TRUE)
dim(cycling)
col_order <- colnames(cycling)
cycling <- cycling[, col_order]
cycling_tmp$Dominion.Road.Total.Cyclists
col_order
col_order <- colnames(cycling[2:])
col_order <- colnames(cycling)[c(2:)]
col_order <- colnames(cycling)[c(2:length(cycling))]
cycling <- cycling[, col_order]
cycling_tmp <- bind_rows(cycling_16, cycling_17, cycling_18)
cycling_tmp[is.na(cycling_tmp)] <- ""  # replace "NA" with ""
dim(cycling_tmp)
cycling <- cycling_tmp %>%
unite(Curran.Street.Cyclists, c(Curran.St.total, Curran.Street.Total, Curran.Street.Total.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Domain.Road.Cyclists, c(Dominion.Road..near.View.Rd..Total.Cyclists, Dominion.Road.Total.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(East.Coast.Road.Cyclists, c(East_Coast_Road.Cyclists, East.Coast.Road.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Great.North.Road.Cyclists, c(Great.North.Rd, Great.North.Road.Cyclists, Great.North.Rd.Total), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Great.South.Road.Cyclists, c(Great.South.Road.Total, Great.South.Road.Total.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Lagoon.Drive.Cyclists, c(Lagoon_Drive.Cyclists, Lagoon.Drive.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Lake.Road.Cyclists, c(Lake.Road.Total, Lake.Road.Total.Cyclists), sep = "", remove = TRUE, na.rm=TRUE)
dim(cycling)
View(rainfall)
View(rainfall)
View(rainfall_16_17_18)
View(rainfall_16_17_18)
cycling <- cycling_tmp %>%
unite(Curran.Street.Cyclists, c(Curran.St.total, Curran.Street.Total, Curran.Street.Total.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Domain.Road.Cyclists, c(Dominion.Road..near.View.Rd..Total.Cyclists, Dominion.Road.Total.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(East.Coast.Road.Cyclists, c(East_Coast_Road.Cyclists, East.Coast.Road.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Great.North.Road.Cyclists, c(Great.North.Rd, Great.North.Road.Cyclists, Great.North.Rd.Total), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Great.South.Road.Cyclists, c(Great.South.Road.Total, Great.South.Road.Total.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Lagoon.Drive.Cyclists, c(Lagoon_Drive.Cyclists, Lagoon.Drive.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Lake.Road.Cyclists, c(Lake.Road.Total, Lake.Road.Total.Cyclists), sep = "", remove = TRUE, na.rm=TRUE)
n<-dim(cycling)[1]
cycling<-cycling[1:(n-1),]  # droo the last row
dim(cycling)
rowSums(cycling)
n_col <- dim(cycling)[2]
cycling$new <- rowSums(cycling[, 2 : n_col])
cycling <- cycling_tmp %>%
unite(Curran.Street.Cyclists, c(Curran.St.total, Curran.Street.Total, Curran.Street.Total.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Domain.Road.Cyclists, c(Dominion.Road..near.View.Rd..Total.Cyclists, Dominion.Road.Total.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(East.Coast.Road.Cyclists, c(East_Coast_Road.Cyclists, East.Coast.Road.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Great.North.Road.Cyclists, c(Great.North.Rd, Great.North.Road.Cyclists, Great.North.Rd.Total), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Great.South.Road.Cyclists, c(Great.South.Road.Total, Great.South.Road.Total.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Lagoon.Drive.Cyclists, c(Lagoon_Drive.Cyclists, Lagoon.Drive.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Lake.Road.Cyclists, c(Lake.Road.Total, Lake.Road.Total.Cyclists), sep = "", remove = TRUE, na.rm=TRUE)
n_row <- dim(cycling)[1]
cycling <- cycling[1 : (n_row - 1),]  # droo the last row
convert(num(cycling[1 : (n_row - 1),]))
cycling <- cycling_tmp %>%
unite(Curran.Street.Cyclists, c(Curran.St.total, Curran.Street.Total, Curran.Street.Total.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Domain.Road.Cyclists, c(Dominion.Road..near.View.Rd..Total.Cyclists, Dominion.Road.Total.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(East.Coast.Road.Cyclists, c(East_Coast_Road.Cyclists, East.Coast.Road.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Great.North.Road.Cyclists, c(Great.North.Rd, Great.North.Road.Cyclists, Great.North.Rd.Total), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Great.South.Road.Cyclists, c(Great.South.Road.Total, Great.South.Road.Total.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Lagoon.Drive.Cyclists, c(Lagoon_Drive.Cyclists, Lagoon.Drive.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Lake.Road.Cyclists, c(Lake.Road.Total, Lake.Road.Total.Cyclists), sep = "", remove = TRUE, na.rm=TRUE)
n_row <- dim(cycling)[1]
cycling <- cycling[1 : (n_row - 1),]  # droo the last row
type.convert(num(cycling[1 : (n_row - 1),]))
cycling <- cycling_tmp %>%
unite(Curran.Street.Cyclists, c(Curran.St.total, Curran.Street.Total, Curran.Street.Total.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Domain.Road.Cyclists, c(Dominion.Road..near.View.Rd..Total.Cyclists, Dominion.Road.Total.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(East.Coast.Road.Cyclists, c(East_Coast_Road.Cyclists, East.Coast.Road.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Great.North.Road.Cyclists, c(Great.North.Rd, Great.North.Road.Cyclists, Great.North.Rd.Total), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Great.South.Road.Cyclists, c(Great.South.Road.Total, Great.South.Road.Total.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Lagoon.Drive.Cyclists, c(Lagoon_Drive.Cyclists, Lagoon.Drive.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Lake.Road.Cyclists, c(Lake.Road.Total, Lake.Road.Total.Cyclists), sep = "", remove = TRUE, na.rm=TRUE)
n_row <- dim(cycling)[1]
cycling <- cycling[1 : (n_row - 1),]  # droo the last row
type.convert(cycling[1 : (n_row - 1),], numerals = c("allow.loss", "warn.loss", "no.loss"))
dim(cycling)
cycling <- cycling_tmp %>%
unite(Curran.Street.Cyclists, c(Curran.St.total, Curran.Street.Total, Curran.Street.Total.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Domain.Road.Cyclists, c(Dominion.Road..near.View.Rd..Total.Cyclists, Dominion.Road.Total.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(East.Coast.Road.Cyclists, c(East_Coast_Road.Cyclists, East.Coast.Road.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Great.North.Road.Cyclists, c(Great.North.Rd, Great.North.Road.Cyclists, Great.North.Rd.Total), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Great.South.Road.Cyclists, c(Great.South.Road.Total, Great.South.Road.Total.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Lagoon.Drive.Cyclists, c(Lagoon_Drive.Cyclists, Lagoon.Drive.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Lake.Road.Cyclists, c(Lake.Road.Total, Lake.Road.Total.Cyclists), sep = "", remove = TRUE, na.rm=TRUE)
n_row <- dim(cycling)[1]
cycling <- cycling[1 : (n_row - 1),]  # droo the last row
cycling <- type.convert(cycling[1 : (n_row - 1),], numerals = c("allow.loss", "warn.loss", "no.loss"))
dim(cycling)
n_col <- dim(cycling)[2]
cycling$new <- rowSums(cycling[, 2 : n_col])
n_col <- dim(cycling)[2]
cycling$Total <- rowSums(cycling[, 2 : n_col], na.rm = FALSE)
cycling_tmp <- bind_rows(cycling_16, cycling_17, cycling_18)
cycling_tmp[is.na(cycling_tmp)] <- ""  # replace "NA" with ""
dim(cycling_tmp)
cycling <- cycling_tmp %>%
unite(Curran.Street.Cyclists, c(Curran.St.total, Curran.Street.Total, Curran.Street.Total.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Domain.Road.Cyclists, c(Dominion.Road..near.View.Rd..Total.Cyclists, Dominion.Road.Total.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(East.Coast.Road.Cyclists, c(East_Coast_Road.Cyclists, East.Coast.Road.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Great.North.Road.Cyclists, c(Great.North.Rd, Great.North.Road.Cyclists, Great.North.Rd.Total), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Great.South.Road.Cyclists, c(Great.South.Road.Total, Great.South.Road.Total.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Lagoon.Drive.Cyclists, c(Lagoon_Drive.Cyclists, Lagoon.Drive.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Lake.Road.Cyclists, c(Lake.Road.Total, Lake.Road.Total.Cyclists), sep = "", remove = TRUE, na.rm=TRUE)
n_row <- dim(cycling)[1]
cycling <- cycling[1 : (n_row - 1),]  # drop the last row
# We need to convert data type form string to int
cycling <- type.convert(cycling[1 : (n_row - 1),], numerals = c("allow.loss", "warn.loss", "no.loss"))
dim(cycling)
n_col <- dim(cycling)[2]
cycling$Total <- rowSums(cycling[, 2 : n_col], na.rm = FALSE)
n_col
n_col <- dim(cycling)[2]
cycling$Total <- rowSums(cycling[, 2 : n_col], na.rm = TRUE)
n_col <- dim(cycling)[2]
cycling$Total <- rowSums(cycling[, 2 : n_col], na.rm = TRUE)
head(cycling[Total])
n_col <- dim(cycling)[2]
cycling$Total <- rowSums(cycling[, 2 : n_col], na.rm = TRUE)
head(cycling$Total)
n_col <- dim(cycling)[2]
cycling$Total <- rowSums(cycling[, 2 : n_col], na.rm = TRUE)
head(cycling$Total, 10)
cycling$Date <- as.Date(cycling$Date, format = "%a %d %m %y")
cycling <- cycling_tmp %>%
unite(Curran.Street.Cyclists, c(Curran.St.total, Curran.Street.Total, Curran.Street.Total.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Domain.Road.Cyclists, c(Dominion.Road..near.View.Rd..Total.Cyclists, Dominion.Road.Total.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(East.Coast.Road.Cyclists, c(East_Coast_Road.Cyclists, East.Coast.Road.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Great.North.Road.Cyclists, c(Great.North.Rd, Great.North.Road.Cyclists, Great.North.Rd.Total), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Great.South.Road.Cyclists, c(Great.South.Road.Total, Great.South.Road.Total.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Lagoon.Drive.Cyclists, c(Lagoon_Drive.Cyclists, Lagoon.Drive.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Lake.Road.Cyclists, c(Lake.Road.Total, Lake.Road.Total.Cyclists), sep = "", remove = TRUE, na.rm=TRUE)
n_row <- dim(cycling)[1]
cycling <- cycling[1 : (n_row - 1),]  # drop the last row
# We need to convert data type form string to int
cycling <- type.convert(cycling[1 : (n_row - 1),], numerals = c("allow.loss", "warn.loss", "no.loss"))
dim(cycling)
n_col <- dim(cycling)[2]
cycling$Total <- rowSums(cycling[, 2 : n_col], na.rm = TRUE)
head(cycling$Total, 10)
cycling$Date <- as.Date(cycling$Date, format = "%a %d %b %Y")
cycling <- cycling_tmp %>%
unite(Curran.Street.Cyclists, c(Curran.St.total, Curran.Street.Total, Curran.Street.Total.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Domain.Road.Cyclists, c(Dominion.Road..near.View.Rd..Total.Cyclists, Dominion.Road.Total.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(East.Coast.Road.Cyclists, c(East_Coast_Road.Cyclists, East.Coast.Road.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Great.North.Road.Cyclists, c(Great.North.Rd, Great.North.Road.Cyclists, Great.North.Rd.Total), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Great.South.Road.Cyclists, c(Great.South.Road.Total, Great.South.Road.Total.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Lagoon.Drive.Cyclists, c(Lagoon_Drive.Cyclists, Lagoon.Drive.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Lake.Road.Cyclists, c(Lake.Road.Total, Lake.Road.Total.Cyclists), sep = "", remove = TRUE, na.rm=TRUE)
n_row <- dim(cycling)[1]
cycling <- cycling[1 : (n_row - 1),]  # drop the last row
# We need to convert data type form string to int
cycling <- type.convert(cycling[1 : (n_row - 1),], numerals = c("allow.loss", "warn.loss", "no.loss"))
dim(cycling)
n_col <- dim(cycling)[2]
cycling$Total <- rowSums(cycling[, 2 : n_col], na.rm = TRUE)
head(cycling$Total, 10)
a <- as.Date(cycling$Date, format = "%a %d %b %Y")
a <- as.Date(cycling$Date, format = "%a%d%b%Y")
a <- as.Date(cycling$Date, format = "%a%d%b%Y")
a <- as.Date(rainfall$Date.NZST., format = "%Y%m%d")
a <- as.Date(rainfall$Date.NZST., original = "%Y%m%d")
rainfall$Date.NZST.
format(20180915, format="%B %d %Y")
a <- as.Date(rainfall$Date.NZST., original = "%Y%m%d")
format(Fri 1 Jan 2016_, format="%B %d %Y")
format(Fri 1 Jan 2016, format="%B %d %Y")
format(20180915, format="%B %d %y")
today <- Sys.Date()
today
type(today)
format(today, format="%B %d %Y")
format("Fri 1 Jan 2016", format="%B %d %Y")
format("Fri 1 Jan 2016", format="%B %d %Y")
format("Fri 1 Jan 2016", format="%B")
format("Fri 1 Jan 2016", format="%B")
x <- c("1jan1960", "2jan1960", "31mar1960", "30jul1960")
z <- as.Date(x, "%d%b%Y")
z
dates <- c("02/27/92", "02/27/92", "01/14/92", "02/28/92", "02/01/92")
as.Date(dates, "%m/%d/%y")
dates
dates <- c("02/27/92", "02/27/92", "01/14/92", "02/28/92", "02/01/92")
dates <- as.Date(dates, "%m/%d/%y")
dates
a <- as.Date("20160101", %Y%m%d)
a <- as.Date("20160101", "%Y%m%d")
a
a <- as.Date(rainfall$Date.NZST., "%Y%m%d")
a <- as.Date(cycling$Date., "%Y%m%d")
a <- as.Date(cycling$Date., "%a %d %b %Y")
a <- as.Date(cycling$Date.)
cycling <- cycling_tmp %>%
unite(Curran.Street.Cyclists, c(Curran.St.total, Curran.Street.Total, Curran.Street.Total.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Domain.Road.Cyclists, c(Dominion.Road..near.View.Rd..Total.Cyclists, Dominion.Road.Total.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(East.Coast.Road.Cyclists, c(East_Coast_Road.Cyclists, East.Coast.Road.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Great.North.Road.Cyclists, c(Great.North.Rd, Great.North.Road.Cyclists, Great.North.Rd.Total), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Great.South.Road.Cyclists, c(Great.South.Road.Total, Great.South.Road.Total.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Lagoon.Drive.Cyclists, c(Lagoon_Drive.Cyclists, Lagoon.Drive.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Lake.Road.Cyclists, c(Lake.Road.Total, Lake.Road.Total.Cyclists), sep = "", remove = TRUE, na.rm=TRUE)
n_row <- dim(cycling)[1]
cycling <- cycling[1 : (n_row - 1),]  # drop the last row
# We need to convert data type form string to int
type.convert(cycling[1 : (n_row - 1),], numerals = c("allow.loss", "warn.loss", "no.loss"))
dim(cycling)
cycling <- cycling_tmp %>%
unite(Curran.Street.Cyclists, c(Curran.St.total, Curran.Street.Total, Curran.Street.Total.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Domain.Road.Cyclists, c(Dominion.Road..near.View.Rd..Total.Cyclists, Dominion.Road.Total.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(East.Coast.Road.Cyclists, c(East_Coast_Road.Cyclists, East.Coast.Road.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Great.North.Road.Cyclists, c(Great.North.Rd, Great.North.Road.Cyclists, Great.North.Rd.Total), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Great.South.Road.Cyclists, c(Great.South.Road.Total, Great.South.Road.Total.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Lagoon.Drive.Cyclists, c(Lagoon_Drive.Cyclists, Lagoon.Drive.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Lake.Road.Cyclists, c(Lake.Road.Total, Lake.Road.Total.Cyclists), sep = "", remove = TRUE, na.rm=TRUE)
n_row <- dim(cycling)[1]
cycling <- cycling[1 : (n_row - 1),]  # drop the last row
# We need to convert data type form string to int
cycling <- type.convert(cycling[1 : (n_row - 1),], numerals = c("allow.loss", "warn.loss", "no.loss"))
dim(cycling)
class(rainfall$Date.NZST.)
class(cycling$Date)
a <- cycling$Date
a
as.Date.character(a)
as.Date.character(a, foramt = "%a %d %b %Y")
as.Date(a, foramt = "%a %d %b %Y")
as.Date("Thu 14 Jan 2016", foramt = "%a %d %b %Y")
as.Date(factor("Thu 14 Jan 2016"), foramt = "%a %d %b %Y")
as.Date(factor("Thu 14 Jan 2016"), foramt = "%a%d%b%Y")
mydate <- factor("1/15/2006 0:00:00")
as.Date(mydate, format = "%m/%d/%Y")
as.Date.factor(factor("Thu 14 Jan 2016"), foramt = "%a %d %b %Y")
as.Date.factor(factor("Thu 14 Jan 2016"))
as.Date.numeric(rainfall$Date.NZST., format = "%Y%m%d")
as.Date(rainfall$Date.NZST., format = "%Y%m%d")
a <- as.Date(rainfall$Date.NZST., "%Y%m%d")
library(lubridate)
ymd(rainfall$Date.NZST.)
library(lubridate)
cycling$Date <- ymd(cycling$Date)
library(lubridate)
rainfall$Date.NZST. <- ymd(rainfall$Date.NZST.)
cycling <- cycling_tmp %>%
unite(Curran.Street.Cyclists, c(Curran.St.total, Curran.Street.Total, Curran.Street.Total.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Domain.Road.Cyclists, c(Dominion.Road..near.View.Rd..Total.Cyclists, Dominion.Road.Total.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(East.Coast.Road.Cyclists, c(East_Coast_Road.Cyclists, East.Coast.Road.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Great.North.Road.Cyclists, c(Great.North.Rd, Great.North.Road.Cyclists, Great.North.Rd.Total), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Great.South.Road.Cyclists, c(Great.South.Road.Total, Great.South.Road.Total.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Lagoon.Drive.Cyclists, c(Lagoon_Drive.Cyclists, Lagoon.Drive.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Lake.Road.Cyclists, c(Lake.Road.Total, Lake.Road.Total.Cyclists), sep = "", remove = TRUE, na.rm=TRUE)
n_row <- dim(cycling)[1]
cycling <- cycling[1 : (n_row - 1),]  # drop the last row
# We need to convert data type form string to int
cycling <- type.convert(cycling[1 : (n_row - 1),], numerals = c("allow.loss", "warn.loss", "no.loss"))
dim(cycling)
n_col <- dim(cycling)[2]
cycling$Total <- rowSums(cycling[, 2 : n_col], na.rm = TRUE)
head(cycling$Total, 10)
install.packages("season")
install.packages("season")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
cycling_16 <- read.csv("./datasets/dailyakldcyclecountdata2016_updated.csv")  # daily cycling data in 2016
cycling_17 <- read.csv("./datasets/dailyakldcyclecountdata2017_1.csv")  # daily cycling data in 2017
cycling_18 <- read.csv("./datasets/dailyakldcyclecountdata2018.csv")  # daily cycling data in 2018
# We only eliminate needless description from the original txt's
rainfall_16_17 <- read.csv("./datasets/rain2016-17_modified.txt")  # hourly rainfall data in 2016 and 2017
rainfall_18 <- read.csv("./datasets/rain2018_modified.txt")  # hourly rainfall data in 2018
head(rainfall_16_17)
head(rainfall_18)
rainfall_16_17_18 <-  rbind(rainfall_16_17, rainfall_18)
dim(rainfall_16_17_18)
rainfall <- rainfall_16_17_18 %>%
group_by(Date.NZST.) %>%
summarise(Total.mm. = sum(Amount.mm.),
Hours.with.Rain. = sum(Amount.mm.) / 24)
rainfall
interset_16_17 <- intersect(colnames(cycling_16), colnames(cycling_17))
interset_17_18 <- intersect(colnames(cycling_17), colnames(cycling_18))
interset_16_17_18 <- intersect(interset_16_17, interset_17_18)
interset_16_17_18
diff_16 <- colnames(cycling_16)[!(colnames(cycling_16) %in% interset_16_17_18)]
diff_17 <- colnames(cycling_17)[!(colnames(cycling_17) %in% interset_16_17_18)]
diff_18 <- colnames(cycling_18)[!(colnames(cycling_18) %in% interset_16_17_18)]
diff_16
diff_17
diff_18
cycling_tmp <- bind_rows(cycling_16, cycling_17, cycling_18)
cycling_tmp[is.na(cycling_tmp)] <- ""  # replace "NA" with ""
dim(cycling_tmp)
cycling <- cycling_tmp %>%
unite(Curran.Street.Cyclists, c(Curran.St.total, Curran.Street.Total, Curran.Street.Total.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Domain.Road.Cyclists, c(Dominion.Road..near.View.Rd..Total.Cyclists, Dominion.Road.Total.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(East.Coast.Road.Cyclists, c(East_Coast_Road.Cyclists, East.Coast.Road.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Great.North.Road.Cyclists, c(Great.North.Rd, Great.North.Road.Cyclists, Great.North.Rd.Total), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Great.South.Road.Cyclists, c(Great.South.Road.Total, Great.South.Road.Total.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Lagoon.Drive.Cyclists, c(Lagoon_Drive.Cyclists, Lagoon.Drive.Cyclists), sep = "", remove = TRUE, na.rm=TRUE) %>%
unite(Lake.Road.Cyclists, c(Lake.Road.Total, Lake.Road.Total.Cyclists), sep = "", remove = TRUE, na.rm=TRUE)
n_row <- dim(cycling)[1]
cycling <- cycling[1 : (n_row - 1),]  # drop the last row
# We need to convert data type form string to int
cycling <- type.convert(cycling[1 : (n_row - 1),], numerals = c("allow.loss", "warn.loss", "no.loss"))
dim(cycling)
n_col <- dim(cycling)[2]
cycling$Total.Cyclists <- rowSums(cycling[, 2 : n_col], na.rm = TRUE)
head(cycling$Total, 10)
library(lubridate)
# My system seems not work if miss the settings, the link below helps me fix the problem
# https://stackoverflow.com/questions/15566875/as-date-returning-na-while-converting-from-ddmmmyyyy
lct <- Sys.getlocale("LC_TIME"); Sys.setlocale("LC_TIME", "C")
cycling$Date <- as.Date(cycling$Date, "%a %d %b %Y")
Sys.setlocale("LC_TIME", lct)
rainfall$Date.NZST. <- ymd(rainfall$Date.NZST.)
head(cycling$Date)
head(rainfall$Date.NZST.)
cycling_rainfall <- merge(cycling, rainfall, by.x = c("Date"), by.y = c("Date.NZST."))
cycling_rainfall <- cycling_rainfall[, c("Date", "Total.Cyclists", "Total.mm.", "Hours.with.Rain.")]
head(cycling_rainfall)
ggplot(cycling_rainfall, mapping = aes(x = Date, y = Total.Cyclists)) +
geom_point(mapping = aes(color = months(Date))) +
ggtitle("Total Cyclists over Years")
ggplot(cycling_rainfall, mapping = aes(x = Date, y = Total.Cyclists)) +
geom_point(mapping = aes(color = weekdays(Date))) +
ggtitle("Total Cyclists over Days of a Week")
ggplot(cycling_rainfall, mapping = aes(x = weekdays(Date), y = Total.Cyclists)) +
geom_boxplot() +
ggtitle("Total Cyclists over Days of a Week")
ggplot(cycling_rainfall, mapping = aes(x = Total.mm., y = Total.Cyclists)) +
geom_point(mapping = aes(size = Total.mm.), color = "blue", alpha = 0.3) +
ggtitle("Total Cyclists over Total Rainfall (mm.)")
ggplot(cycling_rainfall, mapping = aes(x = Date, y = Total.mm.)) +
geom_point(mapping = aes(color = months(Date))) +
ggtitle("Total Rainfall over Years")
ggplot(cycling_rainfall, mapping = aes(x = months(Date), y = Total.mm.)) +
geom_boxplot() +
ggtitle("Total Rainfall over Months")
model = lm(Total.Cyclists~year(Date) + month(Date) + day(Date) + Total.mm., data = cycling_rainfall)
summary(model)
model = lm(Total.Cyclists~year(Date) + month(Date) + day(Date) + Total.mm., data = cycling_rainfall)
summary(model)
model = lm(Total.Cyclists~year(Date) + month(Date) + day(Date) + Total.mm., data = cycling_rainfall)
coef(summary(model))
install.packages("season")
install.packages("season")
install.packages("season")
install.packages("season")
install.packages("season")
getSeason <- function(DATES) {
WS <- as.Date("2012-12-15", format = "%Y-%m-%d") # Winter Solstice
SE <- as.Date("2012-3-15",  format = "%Y-%m-%d") # Spring Equinox
SS <- as.Date("2012-6-15",  format = "%Y-%m-%d") # Summer Solstice
FE <- as.Date("2012-9-15",  format = "%Y-%m-%d") # Fall Equinox
# Convert dates from any year to 2012 dates
d <- as.Date(strftime(DATES, format="2012-%m-%d"))
ifelse (d >= WS | d < SE, "Winter",
ifelse (d >= SE & d < SS, "Spring",
ifelse (d >= SS & d < FE, "Summer", "Fall")))
}
getSeason(cycling_rainfall$Date)
season <- function(DATES) {
WS <- as.Date("2012-12-15", format = "%Y-%m-%d") # Winter Solstice
SE <- as.Date("2012-3-15",  format = "%Y-%m-%d") # Spring Equinox
SS <- as.Date("2012-6-15",  format = "%Y-%m-%d") # Summer Solstice
FE <- as.Date("2012-9-15",  format = "%Y-%m-%d") # Fall Equinox
# Convert dates from any year to 2012 dates
d <- as.Date(strftime(DATES, format="2012-%m-%d"))
ifelse (d >= WS | d < SE, "Winter",
ifelse (d >= SE & d < SS, "Spring",
ifelse (d >= SS & d < FE, "Summer", "Fall")))
}
model = lm(Total.Cyclists~year(Date) + season(Date) + day(Date) + Total.mm., data = cycling_rainfall)
coef(summary(model))
model_with_month = lm(Total.Cyclists~year(Date) + month(Date) + day(Date) + Total.mm., data = cycling_rainfall)
coef(summary(model))
model_with_season = lm(Total.Cyclists~year(Date) + season(Date) + day(Date) + Total.mm., data = cycling_rainfall)
coef(summary(model_with_season))
model_with_month = lm(Total.Cyclists~year(Date) + month(Date) + day(Date) + Total.mm., data = cycling_rainfall)
coef(summary(model_with_month))
knitr::opts_chunk$set(echo = TRUE)
# Load the tidyverse package
library(tidyverse)
library(ggplot2)
#set the file path
setwd("/Users/samlzy/Desktop/A1_cyclists_and_rain_in_Auckand")
# Load the tidyverse package
library(tidyverse)
library(ggplot2)
#set the file path
#setwd("/Users/samlzy/Desktop/A1_cyclists_and_rain_in_Auckand")
#Load the initial daily cycle count data
dcycle16 <- read.csv("datasets/dailyakldcyclecountdata2016_updated.csv")
dcycle17 <- read.csv("datasets/dailyakldcyclecountdata2017_1.csv")
dcycle18 <- read.csv("datasets/dailyakldcyclecountdata2018.csv")
#Load the initial rain data
rain16_17 <- read.csv("datasets/rain2016-17.txt")
